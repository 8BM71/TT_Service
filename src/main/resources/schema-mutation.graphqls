type Mutation {
#    auth(token: TokenInput): Boolean
    createUser(user: UserInput!): String!

    # @return wsID
    createWorkspace(workspace: WorkspaceInput!): String!
    updateWorkspace(id: String!, workspace: WorkspaceInput!): Boolean!
    removeWorkspace(id: String!): Boolean!

    # @return projID
    createProject(wsId: String!, project: ProjectInput!): String!
    updateProject(projId: String!, project: ProjectInput!): Boolean!
    removeProject(id: String!): Boolean!

    # @return taskID
    createTask(projId: String!, task: TaskInput!): String!
#    updateTask(idProject: String!, task: Task!): Boolean!
#    removeTask(id: String!): Boolean!
#
#    startTask(id: String!): Boolean!
#    finishTask(id: String!, timeEntry: TimeEntry!): String!
#    updateTimeEntry(timeEntry: TimeEntry!): Boolean!
}


input WorkspaceInput {
    name: String!
    ownerId: String!
    description: String
}

input ProjectInput {
    name: String!
    color: Int
}

input TaskInput {
    description: String
    name: String
    state: TaskState
}

input TimeEntryInput {
    duration: Int
    endDate: String
    startDate: String
}

input UserInput {
    username: String!
    name: String
    email: String!
}