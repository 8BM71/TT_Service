buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter"
	compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.springframework.boot:spring-boot-starter-data-rest"
	compile "com.graphql-java:graphql-java:${graphqlVersion}"

	runtime "com.h2database:h2"

	testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
	testCompile "org.spockframework:spock-spring:${spockSpringVersion}"
	testCompile "org.spockframework:spock-core:${spockSpringVersion}"
	testCompile "org.springframework.boot:spring-boot-starter-test"
}

clean.doLast {
	file(System.getProperty('user.home')).eachFileMatch(~/timeTracker-test.*/) {
		it.delete()
	}
}

afterEvaluate {
	def source = '1.8'
	if (plugins.findPlugin('java')) {
		sourceCompatibility = source
		targetCompatibility = source
		[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.2'
}